{"version":3,"file":"static/js/134.beffd044.chunk.js","mappings":"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","sources":["BaseStyles/Box.jsx","components/MovieGallery/MovieGallery.jsx","constants/status.constants.js","pages/Movies.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n  grid\n);\n","import styled from 'styled-components';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst NavItem = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n\n  &:not(.active):hover,\n  &:not(.active):focus {\n    color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <NavItem to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavItem>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","export const STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  resolved: 'resolved',\n  rejected: 'rejected',\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieBySearch } from 'services/API';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { Box } from 'BaseStyles/Box';\nimport { NOT_FOUND_IMAGE } from 'constants/BaseURLs';\nimport { STATUS } from 'constants/status.constants';\n\nexport const Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query === null) {\n      return;\n    }\n    try {\n      setQuery(query);\n      getMovieBySearch({ query }).then(({ results }) => {\n        if (results.length === 0) {\n          setStatus(STATUS.rejected);\n          throw new Error('results length 0');\n        } else {\n          setStatus(STATUS.resolved);\n          setMovies(results);\n          return;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return;\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setStatus(STATUS.pending);\n    setMovies([]);\n    setSearchParams(query !== '' ? { query } : {});\n    setQuery('');\n  };\n\n  const handleInput = value => {\n    setQuery(value);\n  };\n\n  return (\n    <main>\n      <section>\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            onChange={e => handleInput(e.target.value)}\n            value={query}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <Box as=\"ul\" display=\"grid\" gridGap=\"6px\" mt=\"6px\">\n          {movies.length > 0 && status === STATUS.resolved && (\n            <MovieGallery movies={movies} />\n          )}\n          {status === STATUS.rejected && (\n            <div>\n              <img src={NOT_FOUND_IMAGE} alt=\"what?\" />\n              <p>\n                We tried very hard but did not find results for your request\n              </p>\n            </div>\n          )}\n        </Box>\n      </section>\n    </main>\n  );\n};\n","import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst API_KEY = 'f516fdc3d4918369a6ad5ae834597c19';\n\nexport const getMovies = async (params = {}) => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async (params = {}) => {\n  const { data } = await moviesApi.get('search/movie', {\n    params: { api_key: API_KEY, ...params },\n  });\n  return data;\n};\n\nexport const getMovieAndInfoById = async (id, type = '', params = {}) => {\n  const { data } = await moviesApi.get(`movie/${id}${type}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","border","shadow","grid","NavItem","NavLink","p","theme","colors","primary","fontSizes","s","secondary","MovieGallery","movies","location","useLocation","map","id","title","to","state","from","STATUS","idle","pending","resolved","rejected","Movies","useState","query","setQuery","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovieBySearch","then","results","length","Error","error","console","log","autoComplete","onSubmit","e","preventDefault","type","name","onChange","value","target","as","display","gridGap","mt","src","NOT_FOUND_IMAGE","alt","moviesApi","axios","baseURL","API_KEY","getMovies","params","api_key","data","getMovieAndInfoById"],"sourceRoot":""}