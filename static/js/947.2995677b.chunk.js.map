{"version":3,"file":"static/js/947.2995677b.chunk.js","mappings":"6LAWaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2JCVWC,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBP,GAASQ,MAAK,SAAAC,GAChC,OAAOV,EAASU,EACjB,GACF,GAAE,CAACT,KAGF,8BACGF,IACC,iCACE,mBAAQY,QAdK,WAAO,IAAD,EAEzBN,GAAS,UAAAF,EAASS,aAAT,eAAgBC,OAAQ,UAClC,EAWO,sBACA,UAAC,IAAD,CAAKC,QAAQ,OAAOC,oBAAoB,YAAYC,QAAQ,OAA5D,WACE,gBACEC,IACwB,OAAtBlB,EAAMmB,YACFC,EAAAA,GADJ,UAEOC,EAAAA,GAAkBrB,EAAMmB,aAEjCG,IAAKtB,EAAMuB,SAEb,4BACE,oCACMvB,EAAMuB,OAAS,KACnB,iCAASvB,EAAMwB,aAAaC,MAAM,EAAG,GAArC,WAEF,yCAAsC,GAArBzB,EAAM0B,cAAmBC,QAAQ,GAAlD,QACA,sCACA,uBAAI3B,EAAM4B,YACV,oCACA,wBACG5B,EAAM6B,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAmBA,EAAGC,MAAbD,EAAGC,KACpB,aAIP,4BACE,SAAC,KAAD,CAASC,GAAI,OAAQpB,MAAOT,EAASS,MAArC,mBAGA,SAAC,KAAD,CAASoB,GAAI,UAAWpB,MAAOT,EAASS,MAAxC,yBAIF,SAAC,EAAAqB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAMX,C,mJCpEKC,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,kCAELC,EAAU,mCAEHC,EAAS,mCAAG,2GAAOC,EAAP,+BAAgB,CAAC,EAAjB,SACAL,EAAUM,IAAI,qBAAsB,CACzDD,QAAO,QACLE,QAASJ,GACNE,KAJgB,uBACf9B,EADe,EACfA,KADe,kBAOhBA,GAPgB,2CAAH,qDAUTiC,EAAgB,mCAAG,2GAAOH,EAAP,+BAAgB,CAAC,EAAjB,SACPL,EAAUM,IAAI,eAAgB,CACnDD,QAAO,QAAGE,QAASJ,GAAYE,KAFH,uBACtB9B,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBF,EAAmB,mCAAG,WAAOoC,GAAP,gGAAWC,EAAX,+BAAkB,GAAIL,EAAtB,+BAA+B,CAAC,EAAhC,SACVL,EAAUM,IAAV,gBAAuBG,GAAvB,OAA4BC,GAAQ,CACzDL,QAAO,QACLE,QAASJ,GACNE,KAJ0B,uBACzB9B,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,qD","sources":["BaseStyles/Box.jsx","components/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n  grid\n);\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { getMovieAndInfoById } from 'services/API';\n\nimport { BASE_POSTER_URL, FAKE_POSTER_URL } from 'constants/BaseURLs';\nimport { Box } from 'BaseStyles/Box';\nimport { NavItem } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleToBack = () => {\n    // console.log(location.state);\n    navigate(location.state?.from || '/movies');\n  };\n  useEffect(() => {\n    getMovieAndInfoById(movieId).then(data => {\n      return setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button onClick={handleToBack}>to back</button>\n          <Box display=\"grid\" gridTemplateColumns=\"320px 1fr\" gridGap=\"12px\">\n            <img\n              src={\n                movie.poster_path === null || undefined\n                  ? FAKE_POSTER_URL\n                  : `${BASE_POSTER_URL + movie.poster_path}`\n              }\n              alt={movie.title}\n            />\n            <div>\n              <h2>\n                {`${movie.title}`}{' '}\n                <span> ({movie.release_date.slice(0, 4)})</span>\n              </h2>\n              <p>User score: {(movie.vote_average * 10).toFixed(0)}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(el => {\n                  return <li key={el.name}>{el.name}</li>;\n                })}\n              </ul>\n            </div>\n          </Box>\n          <div>\n            <NavItem to={'cast'} state={location.state}>\n              Cast\n            </NavItem>\n            <NavItem to={'reviews'} state={location.state}>\n              Reviews\n            </NavItem>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconst API_KEY = 'f516fdc3d4918369a6ad5ae834597c19';\n\nexport const getMovies = async (params = {}) => {\n  const { data } = await moviesApi.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async (params = {}) => {\n  const { data } = await moviesApi.get('search/movie', {\n    params: { api_key: API_KEY, ...params },\n  });\n  return data;\n};\n\nexport const getMovieAndInfoById = async (id, type = '', params = {}) => {\n  const { data } = await moviesApi.get(`movie/${id}${type}`, {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","border","shadow","grid","MovieDetails","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getMovieAndInfoById","then","data","onClick","state","from","display","gridTemplateColumns","gridGap","src","poster_path","FAKE_POSTER_URL","BASE_POSTER_URL","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","el","name","to","Suspense","fallback","moviesApi","axios","baseURL","API_KEY","getMovies","params","get","api_key","getMovieBySearch","id","type"],"sourceRoot":""}